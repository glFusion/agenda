<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.6.1/fullcalendar.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.6.1/fullcalendar.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/qtip2/3.0.3/jquery.qtip.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/qtip2/3.0.3/jquery.qtip.min.js"></script>

<style>
.ui-dialog { z-index: 1001 !important ;}
.ui-dialog {background:#f5f5f5 !important; }â€‹
.ui-dialog-titlebar, .ui-widget-header {background: #339CDA !important; color:#fff !important; }
</style>
<div id="calendar-area" class="uk-height-1-1 uk-width-1-1">
	<div id="calendar">
	</div>

	<div id="dialog-form-full" title="Agenda" style="display:none;">
	</div>
</div>


<div id="dialog-series" title="Edit Event or Series" style="display:none;">
	<p>
		This is one event in a series. What do you want to edit?
	</p>
	<div class="container">
		<form id="what-to-edit">
		<input class="required" type="radio" id="edit-series" name="edit-series" value="0">&nbsp;Just this one<br>
		<input type="radio" id="edit-series" name="edit-series" value="1">&nbsp;The entire series<br>
		</form>
		<div id="validate-error"></div>
	</div>
</div>

<script>
	var modal;
	var calendar;
	var dialog;
	var dialog_series;
	var form = $( "#event-form" );	// entry form
	var whattoeditform = $("#what-to-edit");

	var calheight;
	var calwidth;

	var timepicker = UIkit.timepicker('#end-time', {
		start:0
	});

	var tooltip = $('<div/>').qtip({
		id: 'calendar',
		prerender: true,
		content: {
			text: ' ',
			title: {
				button: true
			}
		},
    position: {
        target: 'event'
    },
/*
		position: {
			my: 'bottom center',
			at: 'top center',
			target: 'mouse',
			viewport: $('#calendar'),
			adjust: {
				mouse: false,
				scroll: false
			}
		},
*/


		show: false,
		hide: false,
		style: 'qtip-light'
	}).qtip('api');

	// document ready - create the calendar widget
	$(document).ready(function() {


		var date = new Date();
		var d = date.getDate();
		var m = date.getMonth();
		var y = date.getFullYear();

		// initialize the calendar
		calendar = $('#calendar').fullCalendar({
			// click on the day - Add Event
{!if write_access}
			dayClick: function(date, jsEvent, view) {

tooltip.hide();


				var clickDate = date.format();
				$('#dialog-form-full').dialog('option', 'title', 'Add Event');
				$("#dialog-form-full").html('');
				url = '/agenda/includes/ajax-form-manager.php';
				$.ajax({
					type: "POST",
					dataType: "html",
					url: url,
					data: {"action" : "new-event" },
					success: function (data) {
						$("#dialog-form-full").html(data);
						form = $( "#event-form" );
						form.validate();
						$("#event-date").val(clickDate);
						$("#event-end-date").val(clickDate);
					},
					error: function (e) {
						console.log("Error retrieving form");
					}
				});

				// override the dialog buttons
				var editButtons = [
								{
									text: "Save Event",
									"class" : 'uk-button uk-button-success',
									click: function() {
										saveevent();
									}
								},
								{
									text: "Cancel",
									"class": 'uk-button uk-button',
									click : function () {
										dialog.dialog('close');
									}
								}
				];

				dialog.dialog("option", "buttons", editButtons); // setter
				var buttons = $('.ui-dialog-buttonset').children('button');
				buttons.removeClass("ui-button ui-widget ui-state-default ui-state-active ui-state-focus");

				dialog.dialog("open");
			},
			// click on event - make this edit
			eventClick: function(event, element) {
				// check event.repeats - if 1 - open dialog
				if ( event.repeats == 1 ) {
					$("#dialog-series").data('event-data', event).dialog('open');
				} else {
					edit_single_event(event);
				}
			},
			eventRender: function(event, element) {
		    element.qtip({
		        content:{
	        	  title : event.title,
	            text : '<p><b>When:</b>'+ event.when +
	            			(event.location && '<p><b>Location:</b><br>'+event.location+'</p>' || '') +
	            			(event.description && '<p><b>Details:</b><br>'+event.description+'</p>' || '')
		        },
		        show: {
				      delay: 500
				    },
				    style: {
			        classes: 'qtip-bootstrap qtip-shadow',
			        width: 	 '1000px'
				    },
				    position: {
			        my: 'top center',
			        at: 'bottom center',
			        target: false, // Defaults to target element
			        container: false, // Defaults to $(document.body)
			        viewport: false, // Requires Viewport plugin
			        adjust: {
		            x: 0, y: 0, // Minor x/y adjustments
		            mouse: true, // Follow mouse when using target:'mouse'
		            resize: true, // Reposition on resize by default
		            method: 'flip flip' // Requires Viewport plugin
			        },
			        effect: function(api, pos, viewport) {
		            $(this).animate(pos, {
	                duration: 200,
	                queue: false
		            });
			        }
				    },
		    });
			},
			// moved an event
			eventDrop: function(event, delta, revertFunc) {
				console.log("event has been moved");
				var params = "&id=" + event.id;
				if ( event.start != null ) {
					params = params + "&date=" + event.start.format();
				}
				if ( event.end != null ) {
					params = params + "&end=" + event.end.format();
				}
				$.ajax({
					type: "POST",
					url: "/agenda/includes/move_event.php",
					data: params,
					success: function (data) {
						console.log("move event successful");
					},
					error: function (e) {
						console.log("Error moving event");
						revertFunc();
					}
				});

			},

/*
			// render event - add tooltip
	    eventRender: function(event, element) {
					element.prop('title',event.description);
					element.attr('data-uk-tooltip', "{animantion: true, delay:500}");
	    },
*/
{!endif}
			// config options
			header: {
				left: 'prev,next today',
				center: 'title',
				right: 'month,agendaWeek,agendaDay,listMonth'
			},
			// this is where you specify where to pull the events from.
			events: "includes/json-events.php",

{!if write_access}
			editable: true,
{!else}
			editable: false,
{!endif}
			defaultView: 'month',
			allDayDefault: false,
		});

		// dialog for event edits
		dialog = $( "#dialog-form-full" ).dialog({
			autoOpen: false,
			height: window.innerHeight * .75,
			width: window.innerWidth * .7,
			modal: true,
			buttons: [
				{
					text: "Save Event",
					"class" : 'uk-button uk-button-primary',
					click: function() {
						saveevent();
					}
				},
				{
					text: "Cancel",
					"class": 'uk-button uk-button-danger',
					click : function () {
						dialog.dialog('close');
					}
				}
			],
      create: function () {
          var buttons = $('.ui-dialog-buttonset').children('button');
          buttons.removeClass("ui-button ui-widget ui-state-default ui-state-active ui-state-focus");
      },
			close: function() {
				var openForm = $("event-form");
				if ( typeof $("#event-form")[ 0 ] !== 'undefined' ) {
					$("#event-form")[ 0 ].reset();
				}
			}
		});

//
// recurring event edit dialog to
// determine if editing the event
// or the series


  	dialog_series = $( "#dialog-series" ).dialog({
      autoOpen: false,
			buttons: [
				{
					text: "OK",
					"class" : 'uk-button uk-button-primary',
					click: function() {
						// restore the event object
						event = $(this).data('event-data');

						// check if form is valid
						if ( whattoeditform.valid() == false ) return false;
						var answer = $('input[name="edit-series"]:checked').val();
						dialog_series.dialog('close');
						alert('anwer is ' + answer + ' for event id ' + event.id);
//						editEvent( event,answer );
					}
				},
				{
					text: "Cancel",
					"class": 'uk-button uk-button-danger',
					click : function () {
						dialog_series.dialog('close');
					}
				}
			],
			close: function() {
				$("#what-to-edit")[0].reset();

			},
			open: function() {
//				whattoeditform.validate();
			    var vform = whattoeditform.validate({
			        rules: {
								"edit-series": {
										required:true
								}
			        },
			        messages:
			        {
			            "edit-series":
			            {
			                required:"Please select an option<br/>"
			            }
			        },
			        errorPlacement: function(error, element)
			        {
			        	console.log(error);
			            if ( element.is(":radio") ) {

            			error.replaceAll($("#validate-error"));

			                //error.appendTo( element.parents('.container') );
			               // error.insertAfter( element );
			            } else { // This is the default behavior
			                 error.insertAfter( element );
			            }
			        }
			    });

			}
    });





	}); // end of document ready

	// save an event
	function saveevent() {
		// ensure the form is valid
		if ( form.valid() == false ) return false;

		// need to know if we are editing or adding or deleting

		//  url = $( '#dbbackupform' ).attr( 'action' );
		url = '/agenda/includes/ajax-save-event.php';
		$.ajax({
			type: "POST",
			dataType: "json",
			url: url,
			data: $('#event-form').serialize(),
			success: function (data) {
				console.log('save event ajax returned successfully');
				$('#calendar').fullCalendar('refetchEvents');
			},
			error: function (e) {
				console.log("Error saving event");
				$('#calendar').fullCalendar('refetchEvents');
			}
		});

		$("#event-form")[0].reset();
		$('#start-time').val('00:00').prop('disabled', false);
		$('#end-time').val('01:00').prop('disabled', false);
		dialog.dialog( "close" );
		return true;
	};

	function deleteevent ( event ) {
		// ensure the form is valid
		if ( form.valid() == false ) return false;

		// need to know if we are editing or adding or deleting

		//  url = $( '#dbbackupform' ).attr( 'action' );
		url = '/agenda/includes/ajax-save-event.php';
		$.ajax({
			type: "POST",
			dataType: "json",
			url: url,
			data: {"action" : "delete-event", "parent_id" : event.parent_id, "event_id" : event.id },
			success: function (data) {
				console.log('Deleting an event returned successfully');
				$('#calendar').fullCalendar('refetchEvents');
			},
			error: function (e) {
				console.log("Error deleting event");
				$('#calendar').fullCalendar('refetchEvents');
			}
		});

		$("#event-form")[0].reset();
		$('#start-time').val('00:00').prop('disabled', false);
		$('#end-time').val('01:00').prop('disabled', false);
		dialog.dialog( "close" );
		return true;
	};

	function edit_single_event( event )
	{
				$('#dialog-form-full').dialog('option', 'title', 'Edit Event');
				$("#dialog-form-full").html('');

				url = '/agenda/includes/ajax-form-manager.php';
				$.ajax({
					type: "POST",
					dataType: "html",
					url: url,
					data: {"action" : "edit-event", "parent_id" : event.parent_id, "event_id" : event.id },
					success: function (data) {
						$("#dialog-form-full").html(data);
						form = $( "#event-form" );
						form.validate();
					},
					error: function (e) {
						console.log("Error retrieving form");
					}
				});
				// override the dialog buttons
				var editButtons = [
								{
									text: "Save Event",
									"class" : 'uk-button uk-button-success',
									click: function() {
										saveevent();
									}
								},
								{
									text: "Delete Event",
									"class" : 'uk-button uk-button-danger',
									click: function() {
										deleteevent(event);
									}
								},
								{
									text: "Cancel",
									"class": 'uk-button uk-button',
									click : function () {
										dialog.dialog('close');
									}
								}
				];

				dialog.dialog("option", "buttons", editButtons); // setter
				var buttons = $('.ui-dialog-buttonset').children('button');
				buttons.removeClass("ui-button ui-widget ui-state-default ui-state-active ui-state-focus");
				dialog.dialog("open");


	}

	function series_or_single_dialog(event)
	{

	}


</script>